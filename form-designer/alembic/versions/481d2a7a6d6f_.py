"""empty message

Revision ID: 481d2a7a6d6f
Revises:
Create Date: 2024-04-11 05:26:22.888723

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = "481d2a7a6d6f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "localauthsession",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("session_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "expiration",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_localauthsession_session_id"),
        "localauthsession",
        ["session_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_localauthsession_user_id"),
        "localauthsession",
        ["user_id"],
        unique=False,
    )
    op.create_table(
        "localuser",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("password_hash", sa.LargeBinary(), nullable=False),
        sa.Column("enabled", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_localuser_username"), "localuser", ["username"], unique=True
    )
    op.create_table(
        "form",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["localuser.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "field",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "type_",
            sa.Enum(
                "text",
                "number",
                "email",
                "password",
                "checkbox",
                "radio",
                "select",
                "textarea",
                name="fieldtype",
            ),
            nullable=False,
        ),
        sa.Column("required", sa.Boolean(), nullable=False),
        sa.Column("prompt", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("form_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["form.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "response",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("client_token", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("form_id", sa.Integer(), nullable=False),
        sa.Column(
            "ts",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["form_id"],
            ["form.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "fieldvalue",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("field_id", sa.Integer(), nullable=False),
        sa.Column("response_id", sa.Integer(), nullable=False),
        sa.Column("value", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["field_id"],
            ["field.id"],
        ),
        sa.ForeignKeyConstraint(
            ["response_id"],
            ["response.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "option",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("label", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("value", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("field_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["field_id"],
            ["field.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("option")
    op.drop_table("fieldvalue")
    op.drop_table("response")
    op.drop_table("field")
    op.drop_table("form")
    op.drop_index(op.f("ix_localuser_username"), table_name="localuser")
    op.drop_table("localuser")
    op.drop_index(op.f("ix_localauthsession_user_id"), table_name="localauthsession")
    op.drop_index(op.f("ix_localauthsession_session_id"), table_name="localauthsession")
    op.drop_table("localauthsession")
    # ### end Alembic commands ###
